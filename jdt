#!/bin/bash
# Java Dump Tool (jdt), a wrapper of jstack, jmap, jinfo, and jstat
# Usage: 1. if there is only one java process, just: jdt
#        2. given a java pid: jdt pid
# Created by zhouwei on 2016-9-18

print_line() {
    echo ""
    echo "=================================================================================="
    echo ""
}

# get pid
if [[ "$1" != "" ]]; then
    if ! [ "$1" -eq "$1" 2>/dev/null ]; then 
	echo "ERROR: $1 is not a pid (must be a number)!"
	exit 1 
    fi
    PID="$1"
else  
    num_java_process="$(ps aux | grep -v grep | grep java | wc -l | awk '{print $1}')"
    if [[ "$num_java_process" == "0" ]]; then 
	echo "please provide a pid: jdt pid"
	exit 1
    elif [[ "$num_java_process" == "1" ]]; then
	PID="$(ps aux | grep -v grep | grep java | awk '{print $2}')"
    elif [[ "$num_java_process" -gt "1" ]]; then
	echo "please provide a pid: jdt pid"
	echo "there are multiple java processes, pick one among them:"
	ps aux | head -1
	ps aux | grep -v grep | grep --color=auto java
	exit 1
    fi
fi


# make a debug directory
output_dir="$(pwd)/debug_java_$PID"
[[ -d $output_dir ]] || mkdir -p $output_dir
cd $output_dir


# ps aux, /proc, and top 
exec 3>&1 
exec 1>ps.log
echo "date: $(date '+%Y-%m-%d %H:%M:%S')"
print_line

echo "ps aux - java:"
ps aux | head -1 
ps aux | grep -v grep | grep $PID 
print_line

echo "/proc/${PID}/status: "
cat /proc/${PID}/status
print_line

echo "top - java:"
top -b -n 1 -H -p $PID


# jstack (use -F to force a dump when it does not respond, see "man jstack")
exec 1>jstack.log
jstack $PID 

exec 1>jstack_l.log
echo "jstack -l $PID:"
jstack -l $PID 


# jmap (use -F to force a dump when it does not respond, see "man jmap")
exec 1>jmap_heap.log
jmap -heap $PID

exec 1>jmap_histo.log
jmap -histo $PID

exec 1>jmap_clstats.log
jmap -clstats $PID

exec 1>jmap_finalizerinfo.log
jmap -finalizerinfo $PID

jmap -dump:live,format=b,file=jmap_dump.bin


# jinfo, print Java system properties and VM flags
exec 1>jinfo.log
jinfo $PID


# jstat
jstat -gc $PID 250ms 20 > jstat_gc.log
jstat -gccapacity $PID 250ms 10 > jstat_gccapacity.log
jstat -gccause $PID 250ms 10 > jstat_gccause.log

jstat -class $PID 250ms 10 > jstat_class.log

jstat -gcnew $PID 250ms 10 > jstat_gcnew.log
jstat -gcnewcapacity $PID 250ms 10 > jstat_gcnewcapacity.log
jstat -gcold $PID 250ms 10 > jstat_gcold.log
jstat -gcoldcapacity $PID 250ms 10 > jstat_gcoldcapacity.log

# -gcmetacapacity is for jdk8
jstat -gcmetacapacity $PID 250ms 10 > jstat_gcmetacapacity.log 2>/dev/null
# -gcpermcapacity is for jdk version <= 7
jstat -gcpermcapacity $PID 250ms 10 > jstat_gcpermcapacity.log 2>/dev/null


exec 1>&3  
exec 3>&-
echo "jdt finished!"
echo "output directory is: $output_dir"

exit 0
