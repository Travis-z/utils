#!/bin/bash
# linux performance analysis tool
# used in the first 60 seconds after login to a server with a performance issue
# inspired by http://techblog.netflix.com/2015/11/linux-performance-analysis-in-60s.html
# created by zhouwei on 2016-6-22

print_line() {
    echo ""
    echo "=================================================================================="
    echo ""
}

# install sysstat if necessary
if ! which iostat || ! which sar ; then
    if which yum ; then
        yum -y install sysstat
    fi
fi >&/dev/null

# stats start
outfile="perf_stats_$(date '+%Y-%m-%d_%H:%M:%S')"
exec 3>&1
exec 1>$outfile

# print file header
echo "linux performance analysis statistics"
echo "date: $(date '+%Y-%m-%d %H:%M:%S')"
print_line

# ps aux, if java process exists
if ps aux | grep -v grep | grep java >/dev/null ; then
    echo "ps aux - java:"
    ps aux | head -1
    ps aux | grep -v grep | grep java
    if [ "$(ps aux | grep -v grep | grep java | wc -l)" = "1" ]; then
	top -b -n 1 -H -p $(pgrep -f java)
    fi
    print_line
fi

# uptime
echo "uptime:"
uptime
print_line

# dmesg and /var/log/messages
echo "dmesg:"
dmesg | tail -20
if [ -f /var/log/messages ]; then
    echo ""
    echo "/var/log/messages:"
    tail -20 /var/log/messages
fi
print_line

# memory and disk usages
echo "memory usage:"
free -m
echo ""
echo "disk usage:"
df -h
print_line

# top
echo "top:"
top -b -n 1
print_line

# netstat
echo "netstat - sockets stats:"
netstat -ant | awk '/^tcp/ {s[$NF]++} END{for(i in s) print i, s[i]}' OFS="\t"
print_line

# set count seconds
count=10

# vmstat
echo "vmstat 1 ${count}:"
vmstat 1 ${count}
print_line

# pidstat
echo "pidstat 1 ${count}:"
pidstat 1 ${count}
print_line

# mpstat
echo "mpstat -P ALL 1 ${count}:"
mpstat -P ALL 1 ${count}
print_line

# iostat
echo "iostat -xz 1 ${count}:"
iostat -xz 1 ${count}
print_line

# sar -n DEV
echo "sar -n DEV 1 ${count}:"
sar -n DEV 1 ${count}
print_line

# sar -n TCP, ETCP
echo "sar -n TCP,ETCP 1 ${count}:"
sar -n TCP,ETCP 1 ${count}
print_line

# the end
exec 1>&3
exec 3>&-
echo "performance statistics finished!"
echo "outfile: $(pwd)/$outfile"

exit 0
